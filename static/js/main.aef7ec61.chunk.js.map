{"version":3,"sources":["context/MainReducer.js","context/MainContext.js","components/MainMenu.js","components/MainForm.js","components/popup.js","components/expensechart.js","components/MainResults.js","components/MainView.js","App.js","serviceWorker.js","index.js"],"names":["state","action","type","form","payload","newForm","expenses","financials","show","address","newExpenses","newFinancials","selected","initialState","purchaseprice","rentalincome","downpayment","interestrate","loanterm","mortgage","percentage","toggle","input","expense","amount","mortage","taxes","insurance","capex","vacancy","repairs","propertymanagement","MainContext","createContext","MainContextProvider","props","useReducer","MainReducer","dispatch","Provider","value","changeExpense","ir","lt","pp","ri","la","console","log","isNaN","keys","Object","values","forEach","index","et","reduce","acc","item","dproi","expensetotal","mcashflow","ycashflow","hvroi","changeAddress","calculate","form1","mo","pr","dp","load","save","children","MainMenu","useContext","useState","id","setId","Menu","pointing","secondary","Item","name","Input","size","placeholder","onChange","e","target","position","label","icon","Button","color","submit","preventDefault","useStyles","makeStyles","theme","root","width","margin","height","spacing","marks","marks2","valuetext","MainForm","setForm","useEffect","classes","className","Header","as","Form","onSubmit","Group","Slider","defaultValue","getAriaValueText","aria-labelledby","step","min","max","valueLabelDisplay","parseInt","inline","lable","style","Select","fluid","options","key","text","primary","borderRadius","opacity","padding","InfoPopup","content","Popup","trigger","inverted","COLORS","data","cx","cy","outerRadius","fill","dataKey","labelLine","midAngle","innerRadius","RADIAN","Math","PI","radius","x","cos","y","sin","textAnchor","dominantBaseline","map","entry","length","InfoForm","setForm1","entries","rows","Table","Row","Cell","toFixed","display","onClick","click","Icon","Grid","columns","GridColumn","Body","Footer","HeaderCell","divided","MainView","Segment","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aef7ec61.chunk.js","sourcesContent":["\nexport default (state, action) => {\n    switch (action.type) {\n        case 'CALCULATE':\n            return {\n                ...state,\n               form: action.payload.newForm,\n               expenses: action.payload.expenses,\n               financials: action.payload.financials,\n               show: action.payload.show,\n            }\n        case 'CHANGEADDRESS':\n            return {\n                ...state,\n                address: action.payload\n            }\n        case 'CHANGEEXPENSE':\n            return {\n                ...state,\n                expenses: action.payload.newExpenses,\n                financials: action.payload.newFinancials,\n                selected: action.payload.selected,\n                show: action.payload.show,\n                \n            }\n        default:\n            return state\n    }\n}","import React, { useReducer, createContext } from 'react';\nimport MainReducer from './MainReducer';\nimport axios from 'axios';\n\nconst initialState = { \n    address: \"\",\n      form:{\n          purchaseprice: 100000,\n          rentalincome: 1200,\n          downpayment: 20000,\n          interestrate: 4,\n          loanterm: 30,\n          mortgage: 80000,\n          percentage: 20,\n          toggle: \"purchaseprice\",\n            input:{\n                expense: \"\",\n                amount: \"\"\n            },\n            show:{ \n                expense: \"\"\n            }\n      },\n      expenses:{\n        mortage: 381,\n        taxes: 180,\n        insurance: 100,\n        capex: 60,\n        vacancy: 36,\n        repairs: 48,\n        propertymanagement:120,\n      },\n      selected: {},\n      financials:{},\n      show:{\n        mortage: 'none',\n        taxes: 'none',\n        insurance: 'none',\n        capex: 'none',\n        vacancy: 'none',\n        repairs: 'none',\n        propertymanagement:'none',\n      },\n};\n\n// Create context\nexport const MainContext = createContext(initialState);\n// Provider component\nexport const MainContextProvider = props => {\n    const [state, dispatch] = useReducer(MainReducer, initialState);\n\n    // Actions\n    function calculate(form1) {\n        console.log(form1)\n        var pp = 0;\n        var ri = 0;\n        var la = 0;\n        var ir = 0;\n        var lt = 0;\n        var mo = 0;\n        var pr = 0;\n        var dp = form1.downpayment\n        if (form1.purchaseprice){\n            pp = form1.purchaseprice;\n        }else{\n\n        }\n        if (form1.rentalincome){\n            ri = form1.rentalincome;\n        }\n\n        if (form1.toggle === \"percentage\") {\n            dp = pp*form1.percentage/100\n            la = pp - dp\n            pr = form1.percentage\n        }\n        if (form1.toggle === \"purchaseprice\") {\n            pr = form1.percentage\n            dp = pp*pr/100\n            la = pp - dp   \n        }\n        if (form1.toggle === \"mortgage\") {\n            la = form1.mortgage\n            dp = pp - la\n            pr = dp/pp*100\n        }\n        if (form1.toggle === \"downpayment\") {\n            la = pp - form1.downpayment\n            dp = form1.downpayment\n            pr = dp/pp*100\n        }\n\n        ir = form1.interestrate/100/12;\n        lt = form1.loanterm*12;\n        mo = la*((ir*(1+ir)**lt)/(((1+ir)**lt)-1));\n        console.log(form1.interestrate)\n\n        if (isNaN(form1.interestrate) || isNaN(form1.loanterm)){\n            mo = 0\n            dp = 0\n            ir = 0\n            lt = 0\n            la = 0\n        }\n\n        if (form1.loanterm === 0 || form1.interestrate === 0){\n            mo = 0\n            dp = 0\n            ir = 0\n            lt = 0\n            la = 0\n        } ;\n\n        var expenses = {\n                mortage: mo,\n                taxes: ri*.15,\n                insurance: 100,\n                capex: ri*.05,\n                vacancy: ri*.03,\n                repairs: ri*.04,\n                propertymanagement:ri*.1,\n        };\n\n        console.log(expenses)\n\n        var selected = state.selected\n        \n        if (form1.show.expense != \"\"){\n            delete selected[form1.show.expense]\n        }\n        const show = state.show\n\n        const keys1 = Object.keys(state.show)\n\n        keys1.forEach((expense) => {\n            if(expense == form1.show.expense){\n                show[expense] = 'none'\n            }\n        })\n\n        const keys = Object.keys(selected);\n        var values = Object.values(selected);\n       \n        keys.forEach((expense,index) => {\n            if(expense in expenses ){\n                expenses[expense] = values[index]\n            }\n        });\n\n        \n\n        console.log(expenses)\n\n        const et = Object\n            .values(expenses)\n            .reduce((acc, item) => (acc += item), 0);\n\n        var dproi = ((ri-et)*12)/(pp-la)*100\n\n        if (isNaN(form1.interestrate) || isNaN(form1.loanterm)){\n            dproi = ((ri-et)*12)/(pp)*100\n        }\n\n        if (form1.loanterm === 0 || form1.interestrate === 0){\n            dproi = ((ri-et)*12)/(pp)*100\n        } ;\n\n        const financials = {\n            expensetotal : et,\n            mcashflow: ri - et,\n            ycashflow: 12*(ri-et),\n            dproi: dproi,\n            hvroi: ((ri-et)*12)/(pp)*100\n        };\n\n        const newForm = {\n            purchaseprice: pp,\n            rentalincome: ri,\n            downpayment: dp,\n            interestrate: ir*100*12,\n            loanterm: lt/12,\n            mortgage: la,\n            percentage: pr,\n            toggle: form1.toggle,\n            show: {\n                expense: \"\"\n            },\n        };\n        console.log(newForm)\n        \n\n        dispatch({\n            type: 'CALCULATE',\n            payload:{\n                newForm,\n                expenses,\n                financials,\n                show,\n            }\n        });\n    }\n\n    function changeExpense(form) {\n        \n        var pp = 0;\n        var ri = 0;\n        var la = 0;\n        var ir = 0;\n        var lt = 0;\n        var mo = 0;\n        var dp = form.downpayment\n        if (form.purchaseprice){\n            pp = form.purchaseprice;\n        }else{\n\n        }\n        if (form.rentalincome){\n            ri = form.rentalincome;\n        }\n        if (form.downpayment && form.downpayment<form.purchaseprice){\n            la = pp - form.downpayment;\n        }else {\n            la = pp;\n        }\n        ir = form.interestrate/100/12;\n        lt = form.loanterm*12;\n        mo = la*((ir*(1+ir)**lt)/(((1+ir)**lt)-1));\n        console.log(form.interestrate)\n        if (isNaN(form.interestrate) || isNaN(form.loanterm)){\n            mo = 0\n            dp = 0\n        }\n\n        if (form.loanterm === 0 || form.interestrate === 0){\n            mo = 0\n            dp = 0\n        } ;\n\n       var newExpenses = state.expenses;\n       const keys = Object.keys(newExpenses);\n       var values = Object.values(newExpenses);\n       \n       keys.forEach((expense,index) => {\n           if(expense == form.input.expense){\n               values[index] = form.input.amount\n           }\n           newExpenses[expense] = values[index]\n       });\n\n    var show = state.show\n    var selected = state.selected\n\n    selected[form.input.expense] = form.input.amount\n    \n    show[form.input.expense] = 'inline'\n  \n    console.log(selected)\n\n    const et = Object\n        .values(newExpenses)\n        .reduce((acc, item) => (acc += item), 0);\n\n       var dproi = ((ri-et)*12)/(pp-la)*100\n\n        if (isNaN(form.interestrate) || isNaN(form.loanterm)){\n            dproi = ((ri-et)*12)/(pp)*100\n        }\n\n        if (form.loanterm === 0 || form.interestrate === 0){\n            dproi = ((ri-et)*12)/(pp)*100\n        } ;\n\n        const newFinancials = {\n            expensetotal : et,\n            mcashflow: ri - et,\n            ycashflow: 12*(ri-et),\n            dproi: dproi,\n            hvroi: ((ri-et)*12)/(pp)*100\n        };\n\n        console.log(newExpenses)\n\n        dispatch({\n            type: 'CHANGEEXPENSE',\n            payload: {\n                newExpenses,\n                newFinancials,\n                selected,\n                show,\n            }\n        });\n\n\n    }\n\n    function changeAddress(address) {\n        dispatch({\n            type: 'CHANGEADDRESS',\n            payload:{\n                address\n            }\n        });\n    }\n\n    function load() {\n        return\n    }\n\n    function save() {\n        return\n    }\n\n\n\n    return (\n        <MainContext.Provider value={{\n            changeExpense,\n            changeAddress,\n            calculate,\n            load,\n            save,\n            state\n        }}>\n            {props.children}\n        </MainContext.Provider>\n    )\n}\n\n","import React, { useContext, useState } from 'react';\nimport { Menu, Input, Button, Header } from \"semantic-ui-react\";\nimport { MainContext } from \"../context/MainContext\";\n\nexport default function MainMenu(){\n    const { changeAddress, load, save } = useContext(MainContext);\n\n    const [id, setId] = useState();\n\n    const handleLoad= e => {\n        e.preventDefault();\n        if (!id) return;\n        load(id);\n    }  \n\n    const handleSave= e => {\n        e.preventDefault();\n        if (!id) return;\n        save(id);\n    }\n\n    return(\n        <div>\n            <Menu pointing secondary>\n                <Menu.Item\n                    name='home'>\n                    <Input size='large' placeholder='Address'\n                        onChange={e => {\n                            changeAddress(e.target.value)\n                        }}/>\n                </Menu.Item>\n                <Menu.Menu position='right'>\n                    <Menu.Item>\n                        <Input label='ID' icon='search'\n                         placeholder=\"My Property's ID\"\n                         onChange={e => {\n                             setId(e.target.value)\n                         }} />\n                    </Menu.Item>\n                    <Menu.Item>\n                        <Button color=\"blue\" submit={handleLoad}>Load</Button>\n                    </Menu.Item>\n                    <Menu.Item>\n                        <Button color=\"red\" submit={handleSave} >Save</Button>\n                    </Menu.Item>\n                </Menu.Menu>\n            </Menu>\n        </div>\n    );\n}","import React, { useState, useContext, useEffect } from 'react';\nimport { Form,  Header, Button } from \"semantic-ui-react\";\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { MainContext } from \"../context/MainContext\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: 300\n    },\n    margin: {\n      height: theme.spacing(3)\n    }\n  }));\n  \n  const marks = [\n    {\n      value: 0,\n      label: \"$0\"\n    },\n    {\n      value: 500,\n      label: \"$500K\"\n    }\n  ];\n  const marks2 = [\n    {\n      value: 0,\n      label: \"$0\"\n    },\n    {\n      value: 5000,\n      label: \"$5000\"\n    }\n  ];\n\n  \n  function valuetext(value) {\n    return `$${value}K`;\n  }\n  \n\nfunction MainForm() {\n    const { calculate, state } = useContext(MainContext);\n\n    const [form, setForm] = useState(state.form);\n\n    useEffect(()=>{\n        calculate(form)\n    }, [form])\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(form)\n        if ( !form ) return;\n        calculate(form)\n    }\n\n    const options= [\n        { key: '10', text: '10 years', value: 10},\n        { key: '15', text: '15 years', value: 15},\n        { key: '30', text: '30 years', value: 30},\n        { key: '0', text: 'No loan', value: 0}\n    ]\n\n    const classes = useStyles();\n\n    return(\n        <div className=\"main\">\n            <Header as='h2'>Investment Information:</Header>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group>\n                    <div className={classes.root}>\n                    <label>Home Value: ${form.purchaseprice/1000}K</label>\n                    <Slider\n                        defaultValue={100}\n                        getAriaValueText={valuetext}\n                        aria-labelledby=\"discrete-slider-always\"\n                        step={1}\n                        marks={marks}\n                        min = {0}\n                        max ={500}\n                        valueLabelDisplay=\"off\"\n                        onChange={ (e, value) => {\n                            setForm({...form,\n                                purchaseprice: parseInt(value*1000),\n                                toggle: \"purchaseprice\"})\n                            console.log(form)\n                            }}/>\n                    </div>\n                    \n                    \n                </Form.Group>\n                <Form.Group>\n                    <div className={classes.root}>\n                        <label>Rental Income: ${form.rentalincome}</label>\n                        <Slider\n                            defaultValue={1200}\n                            getAriaValueText={valuetext}\n                            aria-labelledby=\"discrete-slider-always\"\n                            step={10}\n                            marks={marks2}\n                            min = {0}\n                            max ={5000}\n                            valueLabelDisplay=\"off\"\n                            onChange={ (e, value) => {\n                                setForm({...form,\n                                    rentalincome: parseInt(value)})\n                                console.log(form)\n                                }}/>\n                    </div>\n                </Form.Group>\n                <Header as='h3'>Loan Information:</Header>\n                <Form.Group>\n                    \n                    <label>Loan Amount: $</label>\n                    <Form.Input  type=\"number\" placeholder=\"$0\"\n                        value={state.form.mortgage}\n                        onChange={ e => {\n                            setForm({...form,\n                                mortgage: parseInt(e.target.value),\n                                toggle: \"mortgage\"})\n                            console.log(form)\n                            }}/>\n                  \n                </Form.Group>\n                <Form.Group inline>\n                   <label>Down Payment: $</label>\n                    <Form.Input lable='$' type=\"number\" placeholder=\"$0\"\n                        value={state.form.downpayment}\n                        onChange={ e => {\n                            setForm({...form,\n                                downpayment: parseInt(e.target.value),\n                                toggle: \"downpayment\"})}}/>\n                    <Form.Input label = 'Percentage(%):' type=\"number\" style={{width: \"60px\"}} placeholder=\"0%\"\n                      value = {state.form.percentage}\n                      onChange={ e => {\n                        setForm({\n                          ...form,\n                          percentage: parseInt(e.target.value),\n                          toggle: \"percentage\"\n                        })\n                      }}/>\n                </Form.Group>\n                <Form.Group inline >\n                    <label>Interest Rate:</label>\n                    <Form.Input  type=\"number\" placeholder=\"3%\"\n                        value={state.form.interestrate}\n                        onChange={ e => {\n                            setForm({...form,\n                                interestrate: parseInt(e.target.value)})\n                                console.log(form)}}/>\n                    <Form.Select\n                        fluid\n                        label='Loan Term:'\n                        options={options}\n                        value={state.form.loanterm}\n                        placeholder='years'\n                        onChange={ (e,{value}) => {\n                            setForm({...form,\n                                loanterm: value})\n                                console.log(form)}}\n                    />\n                </Form.Group>\n                <Button primary fluid type=\"submit\" >Calculate Expenses and Profitability</Button>\n            </Form>\n        </div>    \n    );\n}\n\nexport default MainForm;","import React from 'react'\nimport { Button, Popup } from 'semantic-ui-react'\n\nconst style  = {\n    borderRadius: 0,\n    opacity: 1,\n    padding: '2em',\n}\n\nconst InfoPopup = (content) => (\n    <Popup\n        trigger={<Button icon='info' />}\n        content={content}\n        style={style}\n        inverted\n    />\n)\n\nexport default InfoPopup","import React from \"react\";\nimport { ResponsiveContainer, PieChart, Pie, Cell,  } from \"recharts\";\nimport { MainContext } from \"../context/MainContext\";\n\nconst COLORS = ['blue', 'green', 'violet', 'orange', 'teal', 'red', 'purple']\n\nexport default ({data}) => (\n  <ResponsiveContainer width=\"100%\" height={250}>\n    <PieChart height={300}>\n      <Pie\n        data={data}\n        cx=\"50%\"\n        cy=\"50%\"\n        outerRadius={100}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n        labelLine={false}\n        label={({\n          cx,\n          cy,\n          midAngle,\n          innerRadius,\n          outerRadius,\n          value,\n          index\n        }) => {\n          console.log(\"handling label?\");\n          const RADIAN = Math.PI / 180;\n          // eslint-disable-next-line\n          const radius = 25 + innerRadius + (outerRadius - innerRadius);\n          // eslint-disable-next-line\n          const x = cx + radius * Math.cos(-midAngle * RADIAN);\n          // eslint-disable-next-line\n          const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n          return (\n            <text\n              x={x}\n              y={y}\n              fill=\"#8884d8\"\n              textAnchor=\"middle\"\n              dominantBaseline=\"central\"\n            >\n            </text>\n          );\n        }}\n      >\n          {\n            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n          }\n          </Pie>\n    </PieChart>\n  </ResponsiveContainer>\n);\n","import React, { useContext, useState, useEffect } from 'react';\nimport InfoPopup from './popup';\nimport delPopup from './delpopup'\nimport { Table, Grid, Header, GridColumn, Button, Input, Label, Icon} from \"semantic-ui-react\";\nimport { MainContext } from \"../context/MainContext\";\nimport Chart from \"./expensechart\";\n\nexport default function InfoForm() {\n    const { state,changeExpense, calculate } = useContext(MainContext);\n\n    const content1 = 'Yearly return on the downpayment from cashflow only. (yearly cashflow)/(down payment)'\n\n    const content2 = 'Yearly return on the home value from cashflow only. (yearly cashflow)/(home value)'\n\n    const [form, setForm] = useState(state.form);\n\n    const [form1, setForm1] = useState(state.form);\n\n    useEffect(()=>{\n        console.log(form)\n        changeExpense(form)\n\n    }, [form])\n\n    useEffect(() => {\n        calculate(form1)\n    }, [form1])\n\n    var expenses = Object.entries(state.expenses);\n\n    const COLORS = ['blue', 'green', 'violet', 'orange', 'teal', 'red', 'purple'];\n\n    var show = Object.values(state.show);\n\n    const click = (expense) => {\n        setForm1({...state.form,\n            show:{\n                expense: expense,\n            }});\n    }\n\n    const rows = expenses.map ((expense, index)  => (\n        <Table.Row>\n            <Table.Cell><Button size='tiny' color={COLORS[index]}></Button>{`${expense[0]}: $`}\n                <Input\n                    style={{width: \"60px\"}}\n                    value={parseInt(expense[1].toFixed(2))}\n                    onChange={\n                        e => {\n                            var amount = parseInt(e.target.value)\n                            if(isNaN(parseInt(e.target.value))) {\n                                amount = 0\n                            }\n                            setForm({...state.form,\n                                        input:{\n                                            expense: expense[0],\n                                            amount: amount\n                                        }\n                                })}\n                    }/>\n\n                     <Button size = 'tiny' style={\n                         {display:show[index]}} icon \n                         onClick={() => click(expense[0])}><Icon name='delete' /></Button>        \n            </Table.Cell>\n        </Table.Row> \n    ))\n\n\n    const data = expenses.map(expense => ({\n        name: expense[0], value: parseInt(expense[1])\n    }))\n\n    return (\n        <div className=\"main\">\n            <Header as=\"h2\">Monthly Expenses:</Header>\n                {/* <Chart data={data} /> */}\n                <Grid columns={2}>\n                    <Grid.Row>\n                        <GridColumn>\n                            <Table>\n                                <Table.Body>\n                                    {rows}\n                                </Table.Body>\n                                <Table.Footer>\n                                    <Table.Row>\n                                        <Table.HeaderCell>\n                                            Total:${parseInt(state.financials.expensetotal)}\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Footer>\n                            </Table>\n                        </GridColumn>\n                        <GridColumn>\n                            <div className=\"pie\">\n                                <Chart data={data}/>\n                            </div>\n                            \n                        </GridColumn>\n                    </Grid.Row>\n                </Grid>\n                <Header as='h2'>1st Year Returns:</Header> \n                    <Grid columns={2} divided>\n                        <Grid.Row>\n                            <GridColumn>\n                                <Header as=\"h4\">Monthly Cash Flow: ${parseInt(state.financials.mcashflow)}\n                                    \n                                </Header>\n                                <Header as=\"h4\">ROI(Down Payment): {parseInt(state.financials.dproi)}%\n                                    <InfoPopup content={content1} />\n                                </Header>\n                            </GridColumn>\n                            <GridColumn>\n                                <Header as=\"h4\">Yearly Cash Flow: ${parseInt(state.financials.ycashflow)}</Header>\n                                <Header as=\"h4\">ROI(Home Value): ${parseInt(state.financials.hvroi)}%\n                                <InfoPopup content={content2} />\n                               \n                                </Header>\n                            </GridColumn>\n                        </Grid.Row>\n                    </Grid>\n        </div>\n        \n    );\n}","import React, { useContext } from 'react';\nimport '../App.css';\nimport MainMenu from './MainMenu';\nimport MainForm from './MainForm';\nimport MainResults from './MainResults';\nimport { Segment, Grid, GridColumn } from \"semantic-ui-react\";\nimport { MainContext } from \"../context/MainContext\";\n\n\n export default function MainView() {\n\n    return (\n        <Segment>\n            <MainMenu />\n            <Grid columns={2} divided>\n                <Grid.Row>\n                    <GridColumn>\n                        <MainForm /> \n                    </GridColumn> \n                    <GridColumn>\n                        <MainResults />\n                    </GridColumn> \n                </Grid.Row>\n            </Grid>\n        </Segment>\n    );\n}","import React from \"react\";\nimport './App.css'\nimport { MainContextProvider } from \"./context/MainContext\"\nimport MainView from './components/MainView'\n\nexport default function App(){\n    return(\n        <MainContextProvider>\n            <MainView />\n        </MainContextProvider>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}